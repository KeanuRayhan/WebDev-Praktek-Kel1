
services:
  postgres:
    image: 'postgres:16'
    container_name: postgres-container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=WebDev-Praktek-MovieDb
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_dump.sql:/docker-entrypoint-initdb.d/database_dump.sql 
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5

  server:
    build:
      dockerfile: Dockerfile
      context: './server'
    container_name: server-container
    environment:
      - DB_USER=postgres
      - DB_HOST=postgres
      - DB_NAME=WebDev-Praktek-MovieDb
      - DB_PASSWORD=12345
      - DB_PORT=5432
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  client:
    build:
      dockerfile: Dockerfile
      context: ./client
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      server:
        condition: service_started
  
  nginx:
    image: nginx:latest
    container_name: nginx-container
    depends_on:
      client:
        condition: service_started
      server:
        condition: service_started
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
